capital_of(au,ly).
country(fr,au).
shares_border_with(br,ly).
country(fr,br).
capital_of(ar,ly).
country(fr,ar).
located_in_the_administrative_territorial_entity(fr,au).
capital_of(ca,ly).
country(fr,ca).
capital_of(ca1,ly).
country(fr,ca1).
capital_of(ca2,ly).
country(fr,ca2).
contains_administrative_territorial_entity(2n,ly).
country(fr,2n).
located_next_to_body_of_water(sa,ly).
country(fr,sa).
shares_border_with(ca,ly).
shares_border_with(la,ly).
country(fr,la).
shares_border_with(co,ly).
country(fr,co).
shares_border_with(sa3,ly).
country(fr,sa3).
capital_of(rh,ly).
country(fr,rh).
located_in_the_administrative_territorial_entity(fr,rh).
capital_of(me,ly).
country(fr,me).
replaces(la4,ly).
country(fr,la4).
capital_of(ca5,ly).
country(fr,ca5).
replaces(la6,ly).
country(fr,la6).
replaces(sa7,ly).
country(fr,sa7).
contains_administrative_territorial_entity(6t,ly).
country(fr,6t).
capital_of(ca8,ly).
country(fr,ca8).
capital_of(ca9,ly).
country(fr,ca9).
capital_of(ca10,ly).
country(fr,ca10).
capital_of(ca11,ly).
country(fr,ca11).
contains_administrative_territorial_entity(5t,ly).
country(fr,5t).
contains_administrative_territorial_entity(7t,ly).
country(fr,7t).
contains_administrative_territorial_entity(9t,ly).
country(fr,9t).
shares_border_with(vi,ly).
country(fr,vi).
list_of_monuments(li,ly).
country(fr,li).
shares_border_with(sa12,ly).
country(fr,sa12).
diocese(ro,ly).
country(fr,ro).
shares_border_with(pi,ly).
country(fr,pi).
shares_border_with(sa13,ly).
country(fr,sa13).
instance_of(fr14,ly).
country(fr,fr14).
capital_of(ca15,ly).
country(fr,ca15).
capital_of(ca16,ly).
country(fr,ca16).
capital_of(ca17,ly).
country(fr,ca17).
capital_of(ca18,ly).
country(fr,ca18).
capital_of(ca19,ly).
country(fr,ca19).
capital_of(ca20,ly).
country(fr,ca20).
replaces(va,ly).
country(fr,va).
located_next_to_body_of_water(rh21,ly).
country(fr,rh21).
contains_administrative_territorial_entity(1s,ly).
country(fr,1s).
contains_administrative_territorial_entity(3r,ly).
country(fr,3r).
contains_administrative_territorial_entity(4t,ly).
country(fr,4t).
shares_border_with(fr22,ly).
country(fr,fr22).
located_in_the_administrative_territorial_entity(me,ly).
shares_border_with(ou,ly).
country(fr,ou).
shares_border_with(sa23,ly).
country(fr,sa23).
shares_border_with(ch,ly).
country(fr,ch).
shares_border_with(ta,ly).
country(fr,ta).
capital_of(rh21,ly).
contains_administrative_territorial_entity(rh,fr).
capital(ly,rh).
contains_administrative_territorial_entity(au,fr).
capital(ly,au).
country(ly,fr).
